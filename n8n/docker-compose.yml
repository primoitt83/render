version: '3.8'

services:
  postgres-n8n:
    image: postgres:14-alpine
    container_name: postgres-n8n
    restart: always
    expose:
      - 5432
    volumes:
      - ./n8n_pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=df434243f7154ba519dc9fdab2fa2b90 
      - POSTGRES_USER=postgres        
      - POSTGRES_DB=postgres    
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U postgres -d postgres']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      net:
    logging:
      options:
        max-size: 100M
     
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n 
    restart: always
    ports:
      - 5678:5678
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=postgres 
      - DB_POSTGRESDB_HOST=postgres-n8n     
      - DB_POSTGRESDB_PORT=5432      
      - DB_POSTGRESDB_USER=postgres        
      #- DB_POSTGRESDB_SCHEMA=${POSTGRES_SCHEMA}  
      - DB_POSTGRESDB_PASSWORD=df434243f7154ba519dc9fdab2fa2b90                          
      - N8N_HOST=n8n.local        
      - N8N_PORT=5678                             
      - N8N_PROTOCOL=http                         
      - N8N_RUNNERS_ENABLED=true
      - NODE_ENV=production                       
      - WEBHOOK_URL=http://n8n.local:5678
      - TZ=America/Sao_Paulo   
      - GENERIC_TIMEZONE=America/Sao_Paulo       
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres-n8n:
        condition: service_healthy
    networks:
      net:
    logging:
      options:
        max-size: 100M

volumes:
  n8n_data:
    name: n8n_data

networks:
  net:
    external: true